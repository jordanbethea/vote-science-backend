# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting
# ~~~~

# An example controller showing a sample home page
GET     /                           controllers.HomeController.index()

# User/Authentication related tasks
#GET     /signOut                    controllers.UserControllers.ApplicationController.signOut
#GET     /authenticate/:provider     controllers.UserControllers.SocialAuthController.authenticate(provider)

#GET     /signUp                     controllers.UserControllers.SignUpController.view
#POST    /signUp                     controllers.UserControllers.SignUpController.submit

#GET     /signIn                     controllers.UserControllers.SignInController.view
#POST    /signIn                     controllers.UserControllers.SignInController.submit


# Timebased OneTime Password functions
#GET         /totp                            controllers.UserControllers.TotpController.view(userId: java.util.UUID, sharedKey: String, rememberMe: Boolean)
#GET         /enableTotp                      controllers.UserControllers.TotpController.enableTotp
#GET         /disableTotp                     controllers.UserControllers.TotpController.disableTotp
#POST        /totpSubmit                      controllers.UserControllers.TotpController.submit
#POST        /enableTotpSubmit                controllers.UserControllers.TotpController.enableTotpSubmit

#GET         /totpRecovery                    controllers.UserControllers.TotpRecoveryController.view(userID: java.util.UUID, sharedKey: String, rememberMe: Boolean)
#POST        /totpRecoverySubmit              controllers.UserControllers.TotpRecoveryController.submit

# Password functions
#GET         /password/forgot                 controllers.UserControllers.ForgotPasswordController.view
#POST        /password/forgot                 controllers.UserControllers.ForgotPasswordController.submit
#GET         /password/reset/:token           controllers.UserControllers.ResetPasswordController.view(token: java.util.UUID)
#POST        /password/reset/:token           controllers.UserControllers.ResetPasswordController.submit(token: java.util.UUID)
#GET         /password/change                 controllers.UserControllers.ChangePasswordController.view
#POST        /password/change                 controllers.UserControllers.ChangePasswordController.submit

#GET         /account/email/:email            controllers.UserControllers.ActivateAccountController.send(email: String)
#GET         /account/activate/:token         controllers.UserControllers.ActivateAccountController.activate(token: java.util.UUID)


# Load form for creating a new slate
GET     /createSlate                controllers.CreationWebController.createSlateForm()

# New Form submission
POST    /createSlate                controllers.CreationWebController.createSlate()

# slate info page
GET     /slates/:slateID             controllers.CreationWebController.slateInfo(slateID: Long)

# list of all slates
GET     /slateList                  controllers.CreationWebController.slateList()

# load page for slate voting
GET     /slates/:slateID/vote        controllers.VotingWebController.slateVoteForm(slateID: Long)

# submit vote for slate
POST    /slates/:slateID/vote        controllers.VotingWebController.slateVote(slateID: Long)



# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
->      /webjars                    webjars.Routes

#### FROM OLD VERSION. MIGHT NEED UPDATING
# create Slate
#POST    /api/createSlate            controllers.CreationController.createSlate()

# return list of all slates
#GET     /api/slates                 controllers.CreationController.getSlates

# load voting interface for a given slate
#GET     /api/vote/:ballotID         controllers.VotingController.loadBallot(ballotID: Long)

# save vote data for a specific ballot
#POST    /api/vote/:ballotID         controllers.VotingController.saveBallot(ballotID: Long)

# get results info for given slate (just testing purposes atm)
#GET     /api/results/:slateID       controllers.VotingController.getSlateResults(slateID: Long)

